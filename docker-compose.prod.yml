
services:
  elasticsearch:
    image: elasticsearch:8.16.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_prod_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - articles
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - articles_prod_data:/var/lib/postgresql/data
    networks:
      - articles
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d articles_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  article-service:
    container_name: article-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_NAME=${APP_NAME}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ECHO=${DB_ECHO}
      - DB_POOL_SIZE=${DB_POOL_SIZE}
      - DB_MAX_OVERFLOW=${DB_MAX_OVERFLOW}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_EXPIRATION_MINUTES=${JWT_EXPIRATION_MINUTES}
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_USER=${ELASTICSEARCH_USER}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTICSEARCH_VERIFY_CERTS=${ELASTICSEARCH_VERIFY_CERTS}
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - articles


networks:
  articles:
    driver: bridge

volumes:
  elasticsearch_prod_data:
  articles_prod_data:


